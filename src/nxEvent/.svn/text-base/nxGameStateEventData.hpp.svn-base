#ifndef  NXGAMESTATEEVENTDATA_H
#define  NXGAMESTATEEVENTDATA_H

#include <nxGameLogic/nxGameState.hpp>
#include <nxEvent/nxBaseEventData.hpp>
#include <nxEvent/nxEventType.hpp>

/*
 * =====================================================================================
 *        Class: nxGameStateEventData
 *  Description:
 * =====================================================================================
 */
class nxGameStateEventData : public nxBaseEventData
{
	public:
		nxGameStateEventData(nxGameState state)
			:
				nxBaseEventData()
		{
            m_EventType = NX_EVENT_GameState;
			m_State = state;
		}

		virtual ~nxGameStateEventData()
		{
		}

		nxGameStateEventData(stringstream& in)
			:
				nxBaseEventData()
		{
			m_EventType = NX_EVENT_GameState;
			int stateInt;
			in >> stateInt;
			m_State = (nxGameState)stateInt;
		}

		virtual void VSerialize(stringstream &out) const
		{
			out << (int)m_State;
		}

		nxGameState GetState()
		{
			return m_State;
		}

		virtual void Serialize(std::ostrstream out) const
		{
			out<<m_State;
		}


	protected:
		nxGameState m_State;
	private:
};


#endif   // NXGAMESTATEEVENTDATA_H
